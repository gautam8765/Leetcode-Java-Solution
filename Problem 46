class Solution {
    List<List<Integer>> ans=new ArrayList<>();
    public List<List<Integer>> permute(int[] nums) {
        solve(nums, new Stack<>(), new boolean[nums.length]);
        return ans;
    }
    public void solve(int[] arr, Stack<Integer> st, boolean[] vis){
        if(st.size()==arr.length){
            ans.add(new ArrayList<>(st));
            return;
        }
        for(int i=0;i<vis.length;i++){
            if(!vis[i]){
                vis[i]=true;
                st.push(arr[i]);
                solve(arr,st,vis);
                //backtrack step
                vis[i]=false;
                st.pop();

            }
        }
    }
}
